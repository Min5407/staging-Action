# This is a basic workflow to help you get started with Actions

name: stage

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      PR_NUMBER:
        description: "type PR number you want to deploy to stage"
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    defaults:
      run:
        shell: bash

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Output Inputs
        run: echo "${{ toJSON(github.event.inputs) }}"

      - name: check PR number
        uses: actions/github-script@v6
        id: verify_pr_number
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const response = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
            pull_number: ${{ github.event.inputs.PR_number }}
            });

            // Check if the pull request is open
            if (response.data.number !== ${{ github.event.inputs.PR_number }}) {
              throw new Error('Pull request is not open or number is not valid!');
            } else {
              console.log("##PR:" + response.data.head.ref);
              return response.data.head.ref;
            }

      # downlaod the repo of the PR
      - name: checkout PR
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.verify_pr_number.outputs.result }}

      ## deploy action ~~

      ## write comment after deployment
      - name: Update status
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            > PR #${{ github.event.inputs.PR_NUMBER }} has been deployed successfully

            github.rest.issues.createComment({
              issue_number: ${{ github.event.inputs.PR_NUMBER }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "#### finsih deploy to stage"
            })
